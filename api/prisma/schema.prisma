// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String

  // Relations
  videos Video[]
  gifs   Gif[]
}

model Video {
  id          String   @id @default(uuid())
  title       String
  description String?
  url         String
  thumbnail   String?  // Add thumbnail field
  transcript  Json?    // Store transcript as JSON
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  gifs        Gif[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

enum GifStatus {
  pending
  processing
  completed
  failed
}

model Gif {
  id          String    @id @default(cuid())
  url         String
  duration    Int       // Duration in seconds
  startTime   Float     // Start time in seconds
  endTime     Float
  title       String
  description String?
  status      GifStatus @default(pending)
  prompt      String?
  retried     Boolean   @default(false)
  error       String?   // Store error messages
  caption     String?   // Store GIF caption
  videoId     String
  video       Video     @relation(fields: [videoId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}